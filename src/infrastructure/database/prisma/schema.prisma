// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model UsersTable {
  email             String  @unique @db.VarChar()
  username          String  @unique @db.VarChar()
  facebookAccountId String? @unique @map("facebook_account_id") @db.VarChar()
  googleAccountId   String? @unique @map("google_account_id") @db.VarChar()
  password          String  @db.VarChar()
  isEmailValidated  Boolean @default(false) @map("is_email_validated") @db.Boolean()

  id        String    @id @unique @db.VarChar()
  createdAt DateTime  @default(now()) @map("created_at") @db.Timestamptz()
  updatedAt DateTime  @default(now()) @updatedAt @map("updated_at") @db.Timestamptz()
  deletedAt DateTime? @map("deleted_at") @db.Timestamptz()

  EmailValidationTokensTable EmailValidationTokensTable?
  TasksTable                 TasksTable[]

  @@map("users")
}

model EmailValidationTokensTable {
  userId String @unique @map("user_id") @db.VarChar()
  token  String @db.VarChar()

  id        String    @id @unique @db.VarChar()
  createdAt DateTime  @default(now()) @map("created_at") @db.Timestamptz()
  updatedAt DateTime  @default(now()) @updatedAt @map("updated_at") @db.Timestamptz()
  deletedAt DateTime? @map("deleted_at") @db.Timestamptz()

  user UsersTable @relation(fields: [userId], references: [id])

  @@map("email_validation_tokens")
}

model TasksTable {
  userId String @map("user_id") @db.VarChar()
  name   String @db.VarChar()
  status String @db.VarChar()

  id        String    @id @unique @db.VarChar()
  createdAt DateTime  @default(now()) @map("created_at") @db.Timestamptz()
  updatedAt DateTime  @default(now()) @updatedAt @map("updated_at") @db.Timestamptz()
  deletedAt DateTime? @map("deleted_at") @db.Timestamptz()

  user UsersTable @relation(fields: [userId], references: [id])

  @@map("tasks")
}
